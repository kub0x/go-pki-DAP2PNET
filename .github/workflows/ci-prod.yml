# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v2

      #  - name: Kubectl tool installer
      #    uses: Azure/setup-kubectl@v1
      #    with:
      #     version: latest # default is latest

       - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
         uses: docker/login-action@v1
         with:
          # Server address of Docker registry. If not set then will default to Docker Hub
           registry: http://192.168.1.61:5000
           username: aaaaa
           password: aaaaa

       - name: Build and push Docker image to registry
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@1bc1040caef9e604eb543693ba89b5bf4fc80935
         uses: docker/build-push-action@v2
         with:
           context: .
           push: true
           tags: 192.168.1.61:5000/pki:production-${{ github.sha }}

      # Runs a set of commands using the runners shell
       - name: Deploying to Kubernetes Cluster
         run: |
          kubectl set image --namespace=production deployment/pki pki=192.168.1.61:5000/pki:production-${{ github.sha }}
# kubectl scale deployment --replicas=0
# kubectl scale deployment --replicas=1
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
       - uses: actions/checkout@v2

       - name: Kubectl tool installer
         uses: Azure/setup-kubectl@v1
         with:
          version: latest # default is latest

       - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
         uses: docker/login-action@v1
         with:
          # Server address of Docker registry. If not set then will default to Docker Hub
           registry: ghcr.io
           username: ${{ github.actor }}
           password: ${{ secrets.GITHUB_TOKEN }}

       - name: Set up QEMU
         uses: docker/setup-qemu-action@v1
          
       - name: Set up Docker Buildx
         id: buildx
         uses: docker/setup-buildx-action@v1
         with:
           install: true


       - name: Build and push Docker image to registry
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@1bc1040caef9e604eb543693ba89b5bf4fc80935
         uses: docker/build-push-action@v2
         with:
           context: .
           platforms: linux/arm64
           push: true
           tags: ghcr.io/${{ github.actor }}/pki:production-${{ github.sha }}
           build-args: |
            "CA=${{ secrets.CA }}"
            "CA_KEY=${{ secrets.CA_KEY }}"
            "CERTIFICATE=${{ secrets.CERTIFICATE }}"
            "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}"

      #  - name: Set up QEMU
      #    uses: docker/setup-qemu-action@v1
          
      #  - name: Set up Docker Buildx
      #    id: buildx
      #    uses: docker/setup-buildx-action@v1
      #    with:
      #      install: true
          
      #  - name: Build #USING BUILDX HERE AS AN ALIAS TO SUPPORT MULTI ARCH!
      #    run: |
      #     docker build --build-arg CA=${{ secrets.CA }} --build-arg CA_KEY=${{ secrets.CA_KEY }} --build-arg CERTIFICATE=${{ secrets.CERTIFICATE }} --build-arg PRIVATE_KEY=${{ secrets.PRIVATE_KEY }} --platform linux/arm64 -t pki:production-${{ github.sha }} .
      #     docker tag pki:production-${{ github.sha }} ghcr.io/${{ github.actor }}/pki:production-${{ github.sha }}
      #     docker push ghcr.io/${{ github.actor }}/pki:production-${{ github.sha }}

      # Runs a set of commands using the runners shell
       - name: Deploying to Kubernetes Cluster
         run: |
          echo KUBECONFIG="${{ secrets.CLUSTER }}" | tee k3s.yaml
          export KUBECONFIG=k3s.yaml
          kubectl set image --namespace=production deployment/pki pki=ghcr.io/${{ github.actor }}/pki:production-${{ github.sha }}
# kubectl scale deployment --replicas=0
# kubectl scale deployment --replicas=1